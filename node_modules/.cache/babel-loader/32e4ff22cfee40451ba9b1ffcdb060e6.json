{"ast":null,"code":"var _jsxFileName = \"/Users/trainingekoura/Projects/js_reactjs/storybook/src/components/Task/Task.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { actions as actionsType } from '../../lib/actions';\n\nconst Task = ({\n  task: {\n    id,\n    title,\n    state\n  },\n  onArchiveTask,\n  onPinTask\n}) => {\n  console.log(task);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `list-item ${state}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    defaultChecked: state.trim() === actionsType.TASK_ARCHIVED,\n    disabled: true,\n    name: \"checked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"checkbox-custom\",\n    onClick: () => onArchiveTask(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: title + state + actionsType.TASK_ARCHIVED,\n    readOnly: true,\n    placeholder: \"Input title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"actions\",\n    onClick: event => event.stopPropagation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, state != 'TASK_ARCHIVED' && /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => onPinTask(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `icon-star`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }))));\n};\n\nTask.propTypes = {\n  /** Composition of the task */\n  task: PropTypes.shape({\n    /** Id of the task */\n    id: PropTypes.string.isRequired,\n\n    /** Title of the task */\n    title: PropTypes.string.isRequired,\n\n    /** Current state of the task */\n    state: PropTypes.string.isRequired\n  }),\n\n  /** Event to change the task to archived */\n  onArchiveTask: PropTypes.func,\n\n  /** Event to change the task to pinned */\n  onPinTask: PropTypes.func\n};\nexport default Task;","map":{"version":3,"sources":["/Users/trainingekoura/Projects/js_reactjs/storybook/src/components/Task/Task.js"],"names":["React","PropTypes","actions","actionsType","Task","task","id","title","state","onArchiveTask","onPinTask","console","log","trim","TASK_ARCHIVED","event","stopPropagation","propTypes","shape","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAO,IAAIC,WAAnB,QAAqC,mBAArC;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAG;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA;AAAb,GAAR;AAA6BC,EAAAA,aAA7B;AAA4CC,EAAAA;AAA5C,CAAD,KACb;AACIC,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAG,aAAYG,KAAM,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,cAAc,EAAEA,KAAK,CAACK,IAAN,OAAiBV,WAAW,CAACW,aAFjD;AAGI,IAAA,QAAQ,EAAE,IAHd;AAII,IAAA,IAAI,EAAC,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAkC,IAAA,OAAO,EAAE,MAAKL,aAAa,CAACH,EAAD,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ,eASI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,KAAK,EAAEC,KAAK,GAAGC,KAAR,GAAcL,WAAW,CAACW,aAFrC;AAGI,IAAA,QAAQ,EAAE,IAHd;AAII,IAAA,WAAW,EAAC,aAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CATJ,eAgBI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,OAAO,EAAEC,KAAK,IAAIA,KAAK,CAACC,eAAN,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQR,KAAK,IAAI,eAAT,iBACA;AAAG,IAAA,OAAO,EAAE,MAAME,SAAS,CAACJ,EAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAG,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHR,CAhBJ,CADJ;AA6BH,CAhCD;;AAkCAF,IAAI,CAACa,SAAL,GAAiB;AACb;AACAZ,EAAAA,IAAI,EAAEJ,SAAS,CAACiB,KAAV,CAAgB;AACpB;AACAZ,IAAAA,EAAE,EAAEL,SAAS,CAACkB,MAAV,CAAiBC,UAFD;;AAGpB;AACAb,IAAAA,KAAK,EAAEN,SAAS,CAACkB,MAAV,CAAiBC,UAJJ;;AAKpB;AACAZ,IAAAA,KAAK,EAAEP,SAAS,CAACkB,MAAV,CAAiBC;AANJ,GAAhB,CAFO;;AAUb;AACAX,EAAAA,aAAa,EAAER,SAAS,CAACoB,IAXZ;;AAYb;AACAX,EAAAA,SAAS,EAAET,SAAS,CAACoB;AAbR,CAAjB;AAgBA,eAAejB,IAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport {actions as actionsType} from '../../lib/actions'\n\nconst Task = ({task : { id, title, state}, onArchiveTask, onPinTask}) => \n{\n    console.log(task)\n    return (\n        <div className={`list-item ${state}`}>\n            <label className=\"checkbox\">\n                <input \n                    type=\"checkbox\"\n                    defaultChecked={state.trim() === actionsType.TASK_ARCHIVED}\n                    disabled={true}\n                    name=\"checked\" />\n                <span className='checkbox-custom' onClick={()=> onArchiveTask(id)} />\n            </label>\n            <div className='title' >\n                <input \n                    type=\"text\" \n                    value={title + state+actionsType.TASK_ARCHIVED} \n                    readOnly={true} \n                    placeholder=\"Input title\" />\n            </div>\n            <div className=\"actions\" onClick={event => event.stopPropagation()}>\n                {\n                    state != 'TASK_ARCHIVED' &&\n                    <a onClick={() => onPinTask(id)}>\n                        <span className={`icon-star`} />\n                    </a>\n                }\n            </div>\n            \n        </div>\n    )\n\n}\n\nTask.propTypes = {\n    /** Composition of the task */\n    task: PropTypes.shape({\n      /** Id of the task */\n      id: PropTypes.string.isRequired,\n      /** Title of the task */\n      title: PropTypes.string.isRequired,\n      /** Current state of the task */\n      state: PropTypes.string.isRequired,\n    }),\n    /** Event to change the task to archived */\n    onArchiveTask: PropTypes.func,\n    /** Event to change the task to pinned */\n    onPinTask: PropTypes.func,\n};\n\nexport default Task\n"]},"metadata":{},"sourceType":"module"}