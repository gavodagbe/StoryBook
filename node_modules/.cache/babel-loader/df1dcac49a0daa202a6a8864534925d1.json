{"ast":null,"code":"import _toConsumableArray from\"/Users/trainingekoura/Projects/js_reactjs/storybook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{version}from'react';import Task from\"../Task/Task\";import PropTypes from'prop-types';import{actions as actionsType,archiveTask,pinTask}from'../../lib/actions';import{connect}from'react-redux';var TaskList=function TaskList(_ref){var loading=_ref.loading,tasks=_ref.tasks,onPinTask=_ref.onPinTask,onArchiveTask=_ref.onArchiveTask;var events={onPinTask:onPinTask,onArchiveTask:onArchiveTask};var LoadingRow=/*#__PURE__*/React.createElement(\"div\",{className:\"loading-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"glow-checkbox\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"glow-text\"},/*#__PURE__*/React.createElement(\"span\",null,\"Loading\"),\" \",/*#__PURE__*/React.createElement(\"span\",null,\"cool\"),\" \",/*#__PURE__*/React.createElement(\"span\",null,\"state\")));if(loading){return/*#__PURE__*/React.createElement(\"div\",{className:\"list-items\"},LoadingRow,LoadingRow,LoadingRow,LoadingRow,LoadingRow,LoadingRow);}//store.subscribe(data => console.log(store.getState()))\n//tasks = store.getState()\nif(tasks.length===0)return/*#__PURE__*/React.createElement(\"div\",{className:\"list-items\"},/*#__PURE__*/React.createElement(\"div\",{className:\"wrapper-message\"},/*#__PURE__*/React.createElement(\"span\",{className:\"icon-check\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"title-message\"},\"You have no tasks\"),/*#__PURE__*/React.createElement(\"div\",{className:\"subtitle-message\"},\"Sit back and relax\")));// Sort data by TASK_PINNED on top\nvar tasksInOrder=[].concat(_toConsumableArray(tasks.filter(function(t){return t.state==='TASK_PINNED';})),_toConsumableArray(tasks.filter(function(t){return t.state!=='TASK_PINNED';})));//const tasksInOrder = tasks.sort((a, b) => a.state > b.state ? -1 : 1 )\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"list-items\"},tasksInOrder.map(function(task){return/*#__PURE__*/React.createElement(Task,Object.assign({key:task.id,task:task},events));}));};TaskList.prototypes={loading:PropTypes.bool,tasks:PropTypes.arrayOf(Task.propTypes.task).isRequired,onPinTask:PropTypes.func.isRequired,onArchiveTask:PropTypes.func.isRequired};TaskList.defaultProps={loading:false};var mapStateToProps=function mapStateToProps(state){return{tasks:state.tasks};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onArchiveTask:function onArchiveTask(id){return dispatch(archiveTask(id));},onPinTask:function onPinTask(id){return dispatch(pinTask(id));}};};TaskList.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"TaskList\",\"props\":{\"loading\":{\"defaultValue\":{\"value\":\"false\",\"computed\":false},\"required\":false}}};export default connect(mapStateToProps,mapDispatchToProps)(TaskList);if(typeof STORYBOOK_REACT_CLASSES!==\"undefined\"){STORYBOOK_REACT_CLASSES[\"src/components/TaskList/TaskList.js\"]={name:\"TaskList\",docgenInfo:TaskList.__docgenInfo,path:\"src/components/TaskList/TaskList.js\"};}","map":{"version":3,"sources":["/Users/trainingekoura/Projects/js_reactjs/storybook/src/components/TaskList/TaskList.js"],"names":["React","version","Task","PropTypes","actions","actionsType","archiveTask","pinTask","connect","TaskList","loading","tasks","onPinTask","onArchiveTask","events","LoadingRow","length","tasksInOrder","filter","t","state","map","task","id","prototypes","bool","arrayOf","propTypes","isRequired","func","defaultProps","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"kLAAA,MAAOA,CAAAA,KAAP,EAAgBC,OAAhB,KAA+B,OAA/B,CACA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,OAAQC,OAAO,GAAIC,CAAAA,WAAnB,CAAiCC,WAAjC,CAA8CC,OAA9C,KAA4D,mBAA5D,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAiD,IAA/CC,CAAAA,OAA+C,MAA/CA,OAA+C,CAArCC,KAAqC,MAArCA,KAAqC,CAA9BC,SAA8B,MAA9BA,SAA8B,CAAnBC,aAAmB,MAAnBA,aAAmB,CAC9D,GAAMC,CAAAA,MAAM,CAAG,CACXF,SAAS,CAATA,SADW,CAEXC,aAAa,CAAbA,aAFW,CAAf,CAKA,GAAME,CAAAA,UAAU,cACZ,2BAAK,SAAS,CAAC,cAAf,eACE,4BAAM,SAAS,CAAC,eAAhB,EADF,cAEE,4BAAM,SAAS,CAAC,WAAhB,eACE,0CADF,kBACuB,uCADvB,kBACyC,wCADzC,CAFF,CADJ,CASE,GAAIL,OAAJ,CAAa,CACX,mBACE,2BAAK,SAAS,CAAC,YAAf,EACGK,UADH,CAEGA,UAFH,CAGGA,UAHH,CAIGA,UAJH,CAKGA,UALH,CAMGA,UANH,CADF,CAUH,CAED;AACA;AAEA,GAAGJ,KAAK,CAACK,MAAN,GAAiB,CAApB,CACI,mBACI,2BAAK,SAAS,CAAC,YAAf,eACI,2BAAK,SAAS,CAAC,iBAAf,eACI,4BAAM,SAAS,CAAC,YAAhB,EADJ,cAEI,2BAAK,SAAS,CAAC,eAAf,sBAFJ,cAGI,2BAAK,SAAS,CAAC,kBAAf,uBAHJ,CADJ,CADJ,CAUJ;AACA,GAAMC,CAAAA,YAAY,8BACPN,KAAK,CAACO,MAAN,CAAa,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,KAAF,GAAY,aAAhB,EAAd,CADO,qBAEPT,KAAK,CAACO,MAAN,CAAa,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,KAAF,GAAY,aAAhB,EAAd,CAFO,EAAlB,CAKA;AACA,mBACI,2BAAK,SAAS,CAAC,YAAf,EAEQH,YAAY,CAACI,GAAb,CAAiB,SAAAC,IAAI,qBACjB,oBAAC,IAAD,gBAAM,GAAG,CAAEA,IAAI,CAACC,EAAhB,CAAoB,IAAI,CAAED,IAA1B,EAAoCR,MAApC,EADiB,EAArB,CAFR,CADJ,CAUH,CA3DD,CA6DAL,QAAQ,CAACe,UAAT,CAAsB,CAClBd,OAAO,CAAGP,SAAS,CAACsB,IADF,CAElBd,KAAK,CAAGR,SAAS,CAACuB,OAAV,CAAkBxB,IAAI,CAACyB,SAAL,CAAeL,IAAjC,EAAuCM,UAF7B,CAGlBhB,SAAS,CAAGT,SAAS,CAAC0B,IAAV,CAAeD,UAHT,CAIlBf,aAAa,CAAGV,SAAS,CAAC0B,IAAV,CAAeD,UAJb,CAAtB,CAOAnB,QAAQ,CAACqB,YAAT,CAAwB,CACpBpB,OAAO,CAAG,KADU,CAAxB,CAIA,GAAMqB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAX,KAAK,CAAI,CAC7B,MAAO,CACHT,KAAK,CAAGS,KAAK,CAACT,KADX,CAAP,CAGH,CAJD,CAMA,GAAMqB,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,CAAI,CACnC,MAAO,CACHpB,aAAa,CAAE,uBAAAU,EAAE,QAAIU,CAAAA,QAAQ,CAAC3B,WAAW,CAACiB,EAAD,CAAZ,CAAZ,EADd,CAEHX,SAAS,CAAE,mBAAAW,EAAE,QAAIU,CAAAA,QAAQ,CAAC1B,OAAO,CAACgB,EAAD,CAAR,CAAZ,EAFV,CAAP,CAIH,CALD,C,wKAOA,cAAef,CAAAA,OAAO,CAACuB,eAAD,CAAkBC,kBAAlB,CAAP,CAA6CvB,QAA7C,CAAf,C","sourcesContent":["import React, { version } from 'react'\nimport Task from \"../Task/Task\"\nimport PropTypes from 'prop-types'\nimport {actions as actionsType , archiveTask, pinTask} from '../../lib/actions'\nimport { connect } from 'react-redux'\n\nconst TaskList = ({loading , tasks, onPinTask, onArchiveTask}) => {\n    const events = {\n        onPinTask,\n        onArchiveTask\n    }\n\n    const LoadingRow = (\n        <div className=\"loading-item\">\n          <span className=\"glow-checkbox\" />\n          <span className=\"glow-text\">\n            <span>Loading</span> <span>cool</span> <span>state</span>\n          </span>\n        </div>\n      )\n\n      if (loading) {\n        return (\n          <div className=\"list-items\">\n            {LoadingRow}\n            {LoadingRow}\n            {LoadingRow}\n            {LoadingRow}\n            {LoadingRow}\n            {LoadingRow}\n          </div>\n        );\n    }\n\n    //store.subscribe(data => console.log(store.getState()))\n    //tasks = store.getState()\n\n    if(tasks.length === 0)\n        return (\n            <div className=\"list-items\">\n                <div className=\"wrapper-message\">\n                    <span className=\"icon-check\" />\n                    <div className=\"title-message\">You have no tasks</div>\n                    <div className=\"subtitle-message\">Sit back and relax</div>\n                </div>\n            </div>\n        )\n    \n    // Sort data by TASK_PINNED on top\n    const tasksInOrder = [\n            ...tasks.filter(t => t.state === 'TASK_PINNED'),\n            ...tasks.filter(t => t.state !== 'TASK_PINNED'),\n        ];\n    \n    //const tasksInOrder = tasks.sort((a, b) => a.state > b.state ? -1 : 1 )\n    return (\n        <div className='list-items'>\n            {\n                tasksInOrder.map(task => (\n                    <Task key={task.id} task={task} {...events} />\n                ))\n            }\n        </div>\n    )\n    \n}\n\nTaskList.prototypes = {\n    loading : PropTypes.bool,\n    tasks : PropTypes.arrayOf(Task.propTypes.task).isRequired,\n    onPinTask : PropTypes.func.isRequired,\n    onArchiveTask : PropTypes.func.isRequired\n}\n\nTaskList.defaultProps = {\n    loading : false\n}\n\nconst mapStateToProps = state => {\n    return {\n        tasks : state.tasks\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onArchiveTask: id => dispatch(archiveTask(id)),\n        onPinTask: id => dispatch(pinTask(id)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList)"]},"metadata":{},"sourceType":"module"}