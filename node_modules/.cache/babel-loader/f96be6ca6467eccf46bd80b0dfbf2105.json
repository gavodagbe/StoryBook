{"ast":null,"code":"import React from'react';import{actions as actionsType}from'../../lib/actions';var Task=function Task(_ref){var _ref$task=_ref.task,id=_ref$task.id,title=_ref$task.title,state=_ref$task.state,onArchiveTask=_ref.onArchiveTask,onPinTask=_ref.onPinTask;return/*#__PURE__*/React.createElement(\"div\",{className:\"list-item \".concat(state)},/*#__PURE__*/React.createElement(\"label\",{className:\"checkbox\"},/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",checked:state.trim()===actionsType.TASK_ARCHIVED,disabled:true,name:\"checked\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"checkbox-custom\",onClick:function onClick(){return onArchiveTask(id);}})),/*#__PURE__*/React.createElement(\"div\",{className:\"title\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",value:title+state+actionsType.TASK_ARCHIVED,readOnly:true,placeholder:\"Input title\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"actions\",onClick:function onClick(event){return event.stopPropagation();}},state!='TASK_ARCHIVED'&&/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){return onPinTask(id);}},/*#__PURE__*/React.createElement(\"span\",{className:\"icon-star\"}))));};Task.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"Task\",\"props\":{\"task\":{\"type\":{\"name\":\"shape\",\"value\":{\"id\":{\"name\":\"string\",\"description\":\"Id of the task\",\"required\":true},\"title\":{\"name\":\"string\",\"description\":\"Title of the task\",\"required\":true},\"state\":{\"name\":\"string\",\"description\":\"Current state of the task\",\"required\":true}}},\"required\":false,\"description\":\"Composition of the task\"},\"onArchiveTask\":{\"type\":{\"name\":\"func\"},\"required\":false,\"description\":\"Event to change the task to archived\"},\"onPinTask\":{\"type\":{\"name\":\"func\"},\"required\":false,\"description\":\"Event to change the task to pinned\"}}};export default Task;if(typeof STORYBOOK_REACT_CLASSES!==\"undefined\"){STORYBOOK_REACT_CLASSES[\"src/components/Task/Task.js\"]={name:\"Task\",docgenInfo:Task.__docgenInfo,path:\"src/components/Task/Task.js\"};}","map":{"version":3,"sources":["/Users/trainingekoura/Projects/js_reactjs/storybook/src/components/Task/Task.js"],"names":["React","actions","actionsType","Task","task","id","title","state","onArchiveTask","onPinTask","trim","TASK_ARCHIVED","event","stopPropagation"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAAQC,OAAO,GAAIC,CAAAA,WAAnB,KAAqC,mBAArC,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MACb,oBADeC,IACf,CADwBC,EACxB,WADwBA,EACxB,CAD4BC,KAC5B,WAD4BA,KAC5B,CADmCC,KACnC,WADmCA,KACnC,CAD2CC,aAC3C,MAD2CA,aAC3C,CAD0DC,SAC1D,MAD0DA,SAC1D,CACI,mBACI,2BAAK,SAAS,qBAAeF,KAAf,CAAd,eACI,6BAAO,SAAS,CAAC,UAAjB,eACI,6BACI,IAAI,CAAC,UADT,CAEI,OAAO,CAAEA,KAAK,CAACG,IAAN,KAAiBR,WAAW,CAACS,aAF1C,CAGI,QAAQ,CAAE,IAHd,CAII,IAAI,CAAC,SAJT,EADJ,cAMI,4BAAM,SAAS,CAAC,iBAAhB,CAAkC,OAAO,CAAE,yBAAKH,CAAAA,aAAa,CAACH,EAAD,CAAlB,EAA3C,EANJ,CADJ,cASI,2BAAK,SAAS,CAAC,OAAf,eACI,6BACI,IAAI,CAAC,MADT,CAEI,KAAK,CAAEC,KAAK,CAAGC,KAAR,CAAcL,WAAW,CAACS,aAFrC,CAGI,QAAQ,CAAE,IAHd,CAII,WAAW,CAAC,aAJhB,EADJ,CATJ,cAgBI,2BAAK,SAAS,CAAC,SAAf,CAAyB,OAAO,CAAE,iBAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,eAAN,EAAJ,EAAvC,EAEQN,KAAK,EAAI,eAAT,eACA,yBAAG,OAAO,CAAE,yBAAME,CAAAA,SAAS,CAACJ,EAAD,CAAf,EAAZ,eACI,4BAAM,SAAS,YAAf,EADJ,CAHR,CAhBJ,CADJ,CA6BH,CA/BD,C,mnBAiDA,cAAeF,CAAAA,IAAf,C","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport {actions as actionsType} from '../../lib/actions'\n\nconst Task = ({task : { id, title, state}, onArchiveTask, onPinTask}) => \n{\n    return (\n        <div className={`list-item ${state}`}>\n            <label className=\"checkbox\">\n                <input \n                    type=\"checkbox\"\n                    checked={state.trim() === actionsType.TASK_ARCHIVED}\n                    disabled={true}\n                    name=\"checked\" />\n                <span className='checkbox-custom' onClick={()=> onArchiveTask(id)} />\n            </label>\n            <div className='title' >\n                <input \n                    type=\"text\" \n                    value={title + state+actionsType.TASK_ARCHIVED} \n                    readOnly={true} \n                    placeholder=\"Input title\" />\n            </div>\n            <div className=\"actions\" onClick={event => event.stopPropagation()}>\n                {\n                    state != 'TASK_ARCHIVED' &&\n                    <a onClick={() => onPinTask(id)}>\n                        <span className={`icon-star`} />\n                    </a>\n                }\n            </div>\n            \n        </div>\n    )\n\n}\n\nTask.propTypes = {\n    /** Composition of the task */\n    task: PropTypes.shape({\n      /** Id of the task */\n      id: PropTypes.string.isRequired,\n      /** Title of the task */\n      title: PropTypes.string.isRequired,\n      /** Current state of the task */\n      state: PropTypes.string.isRequired,\n    }),\n    /** Event to change the task to archived */\n    onArchiveTask: PropTypes.func,\n    /** Event to change the task to pinned */\n    onPinTask: PropTypes.func,\n};\n\nexport default Task\n"]},"metadata":{},"sourceType":"module"}