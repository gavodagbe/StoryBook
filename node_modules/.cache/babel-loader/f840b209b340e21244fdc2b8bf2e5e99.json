{"ast":null,"code":"var _jsxFileName = \"/Users/trainingekoura/Projects/js_reactjs/storybook/src/components/TaskList/TaskList.js\";\nimport React, { version } from 'react';\nimport Task from \"../Task/Task\";\n\nconst TaskList = ({\n  loading,\n  tasks,\n  onPinTask,\n  onArchiveTask\n}) => {\n  const events = {\n    onPinTask,\n    onArchiveTask\n  };\n  const LoadingRow = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"glow-checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"glow-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, \"Loading\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 34\n    }\n  }, \"cool\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 52\n    }\n  }, \"state\")));\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, LoadingRow, LoadingRow, LoadingRow, LoadingRow, LoadingRow, LoadingRow);\n  }\n\n  if (tasks.length === 0) return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }\n  }, \"empty \");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, tasks.map(task => /*#__PURE__*/React.createElement(Task, Object.assign({\n    key: task.id,\n    task: task\n  }, events, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }))));\n};\n\nTaskList.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"TaskList\"\n};\nexport default TaskList;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/TaskList/TaskList.js\"] = {\n    name: \"TaskList\",\n    docgenInfo: TaskList.__docgenInfo,\n    path: \"src/components/TaskList/TaskList.js\"\n  };\n}","map":{"version":3,"sources":["/Users/trainingekoura/Projects/js_reactjs/storybook/src/components/TaskList/TaskList.js"],"names":["React","version","Task","TaskList","loading","tasks","onPinTask","onArchiveTask","events","LoadingRow","length","map","task","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA,SAAlB;AAA6BC,EAAAA;AAA7B,CAAD,KAAiD;AAC9D,QAAMC,MAAM,GAAG;AACXF,IAAAA,SADW;AAEXC,IAAAA;AAFW,GAAf;AAKA,QAAME,UAAU,gBACZ;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,oBACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADvB,oBACyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADzC,CAFF,CADJ;;AASE,MAAIL,OAAJ,EAAa;AACX,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGK,UADH,EAEGA,UAFH,EAGGA,UAHH,EAIGA,UAJH,EAKGA,UALH,EAMGA,UANH,CADF;AAUD;;AAEH,MAAGJ,KAAK,CAACK,MAAN,KAAiB,CAApB,EACI,oBAAO;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAEJ,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQL,KAAK,CAACM,GAAN,CAAUC,IAAI,iBACV,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,IAAA,IAAI,EAAED;AAA1B,KAAoCJ,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CAFR,CADJ;AAUH,CAzCD;;;;;;;AA2CA,eAAeL,QAAf","sourcesContent":["import React, { version } from 'react'\nimport Task from \"../Task/Task\"\n\nconst TaskList = ({loading , tasks, onPinTask, onArchiveTask}) => {\n    const events = {\n        onPinTask,\n        onArchiveTask\n    }\n\n    const LoadingRow = (\n        <div className=\"loading-item\">\n          <span className=\"glow-checkbox\" />\n          <span className=\"glow-text\">\n            <span>Loading</span> <span>cool</span> <span>state</span>\n          </span>\n        </div>\n      )\n      \n      if (loading) {\n        return (\n          <div className=\"list-items\">\n            {LoadingRow}\n            {LoadingRow}\n            {LoadingRow}\n            {LoadingRow}\n            {LoadingRow}\n            {LoadingRow}\n          </div>\n        );\n      }\n\n    if(tasks.length === 0)\n        return <div className='list-items'>empty </div>\n\n    return (\n        <div className='list-items'>\n            {\n                tasks.map(task => (\n                    <Task key={task.id} task={task} {...events} />\n                ))\n            }\n        </div>\n    )\n    \n}\n\nexport default TaskList"]},"metadata":{},"sourceType":"module"}