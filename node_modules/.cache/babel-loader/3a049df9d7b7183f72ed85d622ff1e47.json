{"ast":null,"code":"var _jsxFileName = \"/Users/trainingekoura/Projects/js_reactjs/storybook/src/components/TaskList/TaskList.js\";\nimport React, { version } from 'react';\nimport Task from \"../Task/Task\";\nimport PropTypes from 'prop-types';\n\nconst TaskList = ({\n  loading,\n  tasks,\n  onPinTask,\n  onArchiveTask\n}) => {\n  const events = {\n    onPinTask,\n    onArchiveTask\n  };\n  const LoadingRow = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"glow-checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"glow-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"Loading\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 34\n    }\n  }, \"cool\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 52\n    }\n  }, \"state\")));\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, LoadingRow, LoadingRow, LoadingRow, LoadingRow, LoadingRow, LoadingRow);\n  }\n\n  console.log(tasks);\n  if (tasks.length === 0) return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"You have no tasks\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subtitle-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Sit back and relax\"))); // Sort data by TASK_PINNED on top\n\n  const tasksInOrder = [...tasks.filter(t => t.state === 'TASK_PINNED'), ...tasks.filter(t => t.state !== 'TASK_PINNED')]; //const tasksInOrder = tasks.sort((a, b) => a.state > b.state ? -1 : 1 )\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, tasksInOrder.map(task => /*#__PURE__*/React.createElement(Task, Object.assign({\n    key: task.id,\n    task: task\n  }, events, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }))));\n};\n\nTaskList.prototypes = {\n  loading: PropTypes.bool,\n  tasks: PropTypes.arrayOf(Task.propTypes.task).isRequired,\n  onPinTask: PropTypes.func,\n  onArchiveTask: PropTypes.func\n};\nTaskList.defaultProps = {\n  loading: false\n};\nTaskList.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"TaskList\",\n  \"props\": {\n    \"loading\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    }\n  }\n};\nexport default TaskList;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/TaskList/TaskList.js\"] = {\n    name: \"TaskList\",\n    docgenInfo: TaskList.__docgenInfo,\n    path: \"src/components/TaskList/TaskList.js\"\n  };\n}","map":{"version":3,"sources":["/Users/trainingekoura/Projects/js_reactjs/storybook/src/components/TaskList/TaskList.js"],"names":["React","version","Task","PropTypes","TaskList","loading","tasks","onPinTask","onArchiveTask","events","LoadingRow","console","log","length","tasksInOrder","filter","t","state","map","task","id","prototypes","bool","arrayOf","propTypes","isRequired","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { version } from 'react'\nimport Task from \"../Task/Task\"\nimport PropTypes from 'prop-types'\n\nconst TaskList = ({loading , tasks, onPinTask, onArchiveTask}) => {\n    const events = {\n        onPinTask,\n        onArchiveTask\n    }\n\n    const LoadingRow = (\n        <div className=\"loading-item\">\n          <span className=\"glow-checkbox\" />\n          <span className=\"glow-text\">\n            <span>Loading</span> <span>cool</span> <span>state</span>\n          </span>\n        </div>\n      )\n\n      if (loading) {\n        return (\n          <div className=\"list-items\">\n            {LoadingRow}\n            {LoadingRow}\n            {LoadingRow}\n            {LoadingRow}\n            {LoadingRow}\n            {LoadingRow}\n          </div>\n        );\n    }\n\n    console.log(tasks);\n\n    if(tasks.length === 0)\n        return (\n            <div className=\"list-items\">\n                <div className=\"wrapper-message\">\n                    <span className=\"icon-check\" />\n                    <div className=\"title-message\">You have no tasks</div>\n                    <div className=\"subtitle-message\">Sit back and relax</div>\n                </div>\n            </div>\n        )\n    \n    // Sort data by TASK_PINNED on top\n    const tasksInOrder = [\n            ...tasks.filter(t => t.state === 'TASK_PINNED'),\n            ...tasks.filter(t => t.state !== 'TASK_PINNED'),\n        ];\n    \n    //const tasksInOrder = tasks.sort((a, b) => a.state > b.state ? -1 : 1 )\n    return (\n        <div className='list-items'>\n            {\n                tasksInOrder.map(task => (\n                    <Task key={task.id} task={task} {...events} />\n                ))\n            }\n        </div>\n    )\n    \n}\n\nTaskList.prototypes = {\n    loading : PropTypes.bool,\n    tasks : PropTypes.arrayOf(Task.propTypes.task).isRequired,\n    onPinTask : PropTypes.func,\n    onArchiveTask : PropTypes.func\n}\n\nTaskList.defaultProps = {\n    loading : false\n}\nexport default TaskList"]},"metadata":{},"sourceType":"module"}